version: "3.9"

networks:
  webproxy:
    driver: bridge

services:
  # ────────────────────────────────────────────────────────────────────────────
  # Traefik 3 – TLS termination, single router for /chrome WebSocket only
  # ────────────────────────────────────────────────────────────────────────────
  proxy:
    image: traefik:3 # always pulls the latest 3.x
    env_file:
      - .env # ACME_EMAIL loaded here
    command:
      # Core providers / entrypoints
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Force HTTP → HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https

      # ACME (Let’s Encrypt) – TLS-ALPN
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

      # Nice-to-haves
      - --log.level=INFO
      - --accesslog=true
      - --accesslog.filepath=/traefik-logs/access.log
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # ACME cert storage (chmod 600 ./letsencrypt/acme.json)
      - ./letsencrypt:/letsencrypt
      # Access logs (optional)
      - ./traefik-logs:/traefik-logs
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks: [webproxy]

  # ────────────────────────────────────────────────────────────────────────────
  # Browserless (v2 latest) – exposed only via Traefik router above
  # ────────────────────────────────────────────────────────────────────────────
  browserless:
    image: ghcr.io/browserless/chrome:latest
    env_file:
      - .env # BL_TOKEN loaded here
    depends_on: [proxy]
    environment:
      # Required auth
      - TOKEN=${BL_TOKEN}
      # Typical tuning (safe defaults – tweak if needed)
      - CONCURRENT=4
      - QUEUED=100
      - TIMEOUT=300000
      - IGNORE_HTTPS_ERRORS=true
      - LAUNCH_ARGS=--disable-dev-shm-usage --no-sandbox
      - EXIT_ON_HEALTH_FAILURE=true
      - DEBUG=-*
    # ✱ Internal-only port – Traefik will proxy to it
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"

      # ───── Router: HTTPS/WSS to /chrome, must carry exact token ─────
      - "traefik.http.routers.chrome.rule=Host(`${BL_HOST}`) && PathPrefix(`/chrome`)"
      - "traefik.http.routers.chrome.entrypoints=websecure"
      - "traefik.http.routers.chrome.tls=true"
      - "traefik.http.routers.chrome.tls.certresolver=letsencrypt"

      # service → container:3000
      - "traefik.http.services.chrome.loadbalancer.server.port=3000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -fs "http://localhost:3000/json/version?token=${BL_TOKEN}" || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks: [webproxy]

volumes:
  letsencrypt:
    driver: local
  traefik-logs:
    driver: local
